/*!
Portal Live Editor - Complete Version
@Copyright(c) 2025 nohohonki
@license MIT
*/
(function(){"use strict";window.initPortalCustomizer=function(t){function e(){const t=location.pathname,e=t.match(/\/k\/guest\/(\d+)\//);return e?e[1]:null}async function n(t,e=null){try{const n=e?kintone.api.url(`/k/guest/${e}/v1/app/form/fields`,!0):kintone.api.url("/k/v1/app/form/fields",!0),o=await kintone.api(n,"GET",{app:t}),i=o.properties["ポータルユーザーID"],a=o.properties["ポータルデータ"];return i&&a}catch(e){return console.error(`アプリ${t}のフィールド取得エラー:`,e),!1}}function o(t,e=null){const n=window.CURRENT_SPACE_ID;return n?kintone.api.url("/k/guest/"+n+"/v1"+t,!0):kintone.api.url("/k/v1"+t,!0)}async function i(t=null){try{const e=t?kintone.api.url("/k/guest/"+t+"/v1/apps",!0):kintone.api.url("/k/v1/apps",!0),o=await kintone.api(e,"GET",{});for(const e of o.apps){const o=e.spaceId||null;if((t&&o===t||!t&&!o)&&await n(e.appId,o))return e.appId}return null}catch(t){return console.error("設定用アプリの検出に失敗:",t),null}}async function a(t,e="auto"){try{const n=window.DYNAMIC_CONFIG_APP_ID;let i;i="shared"===e?0:"personal"===e?kintone.getLoginUser().id:"shared"===window.currentEditMode?0:"personal"===window.currentEditMode?kintone.getLoginUser().id:0;const a=JSON.stringify(t),d=`ポータルユーザーID = ${i}`,l=await kintone.api(o("/records"),"GET",{app:n,query:d});if(l.records.length>0){const t=l.records[0];await kintone.api(o("/record"),"PUT",{app:n,id:t.レコード番号.value,record:{"ポータルデータ":{value:a}}})}else await kintone.api(o("/record"),"POST",{app:n,record:{"ポータルユーザーID":{value:i},"ポータルデータ":{value:a}}})}catch(t){throw console.error("kintoneアプリへの保存エラー:",t),t}}async function d(t="auto"){try{const e=window.DYNAMIC_CONFIG_APP_ID;let n;n="shared"===t?0:kintone.getLoginUser().id;const i=`ポータルユーザーID = ${n}`,a=await kintone.api(o("/records"),"GET",{app:e,query:i});if(a.records.length>0){const t=a.records[0],e=t["ポータルデータ"].value;if(e)return JSON.parse(e)}if(("auto"===t||"personal"===t)&&0!==n){const t="ポータルユーザーID = 0",n=await kintone.api(o("/records"),"GET",{app:e,query:t});if(n.records.length>0){const t=n.records[0],e=t["ポータルデータ"].value;if(e)return JSON.parse(e)}}return null}catch(t){return console.log("kintoneアプリからのデータ読み込みでエラーが発生:",t),null}}function l(){const t=document.getElementById("portal-grid"),e=1980,n=Math.floor(e/40);console.log("Container width:",e,"px"),console.log("Calculated columns:",n),window.generateGridCSS(n);const o=100/n;t.style.setProperty("--grid-column-width",o+"%"),t.style.setProperty("--actual-columns",n);const i=GridStack.init({cellHeight:40,cellWidth:40,margin:0,float:!0,disableDrag:!0,disableResize:!1,minWidth:1,minHeight:2,animate:!0,resizable:{handles:"ne, se, sw, nw"},maxRow:50,column:n});window.grid=i,window.editMode=!1;const a=document.getElementById("portal-grid");a&&a.classList.remove("edit-mode"),i.on("resizestop",function(t,e){const n=e.gridstackNode,o=e.classList.contains("no-header-item");n.w<2&&i.update(e,{w:2});const a=o?1:2;n.h<a&&i.update(e,{h:a})}),r(i)}function r(t){document.getElementById("editToggle").addEventListener("click",async()=>{window.editMode?(await w(t),window.editMode=!1,p()):await c()}),document.getElementById("editCancel").addEventListener("click",async()=>{if(window.editMode){const e=await Swal.fire({title:"編集をキャンセルしますか？",text:"編集を保存せずにキャンセルを実行しますか？",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"はい、キャンセルする",cancelButtonText:"いいえ"});e.isConfirmed&&(await m(t,window.currentEditMode),window.editMode=!1,p(),Swal.fire({icon:"success",title:"キャンセル完了",text:"編集がキャンセルされ、元の状態に戻りました。",timer:1500,timerProgressBar:!0,showConfirmButton:!1}))}}),document.getElementById("addWidget").addEventListener("click",()=>{k(t)}),document.getElementById("resetLayout").addEventListener("click",async()=>{const e=await Swal.fire({title:"現在のタブをリセットしますか？",text:"現在のタブのレイアウトが削除され、元に戻すことはできません。",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"はい、リセットする",cancelButtonText:"キャンセル"});if(e.isConfirmed){t.removeAll(!1);const e=window.tabs.find(t=>t.id===window.activeTabId);e&&(e.layouts=[],e.widgets={}),Swal.fire({icon:"success",title:"リセット完了",text:"現在のタブがリセットされました。",timer:1500,timerProgressBar:!0,showConfirmButton:!1})}}),document.getElementById("deleteMyPortal").addEventListener("click",async()=>{await q()}),document.getElementById("addTab").addEventListener("click",()=>{x()})}async function c(){const t=await Swal.fire({title:"編集モードを選択",text:"どちらのポータルを編集しますか？",showCancelButton:!0,confirmButtonText:"共有ポータルの編集",cancelButtonText:"マイポータルの編集",reverseButtons:!0});t.isConfirmed?(window.currentEditMode="shared",await s("shared")):t.isDismissed&&t.dismiss===Swal.DismissReason.cancel&&(window.currentEditMode="personal",await s("personal"))}async function s(t){await m(window.grid,t),window.editMode=!0,p(),Swal.fire({icon:"success",title:`${"shared"===t?"共有":"マイ"}ポータル編集モード`,text:"編集モードが開始されました。",timer:1500,timerProgressBar:!0,showConfirmButton:!1})}function u(t){const e=document.getElementById("portal-grid");e&&(t?e.classList.add("show-grid"):e.classList.remove("show-grid"));const n=document.getElementById("portal-grid");n&&(t?n.classList.add("edit-mode"):n.classList.remove("edit-mode"))}function p(){const t=document.getElementById("editToggle"),e=document.getElementById("editCancel"),n=document.getElementById("addWidget"),o=document.getElementById("addTab"),i=document.getElementById("resetLayout"),a=document.getElementById("deleteMyPortal");document.getElementById("portal-grid");if(window.editMode){const d="shared"===window.currentEditMode?"共有ポータル編集中":"マイポータル編集中";t.textContent=`編集終了 (${d})`,t.className="kintoneplugin-button-dialog-ok",e.style.display="inline-block",n.style.display="inline-block",o.style.display="inline-block",i.style.display="inline-block",a.style.display="inline-block",window.grid.enableMove(!0),window.grid.enableResize(!0),u(!0),document.querySelectorAll(".portal-tab").forEach(t=>{const e=t.querySelector(".portal-tab-actions");e&&(e.style.display="flex")})}else t.textContent="編集モードに切替",t.className="kintoneplugin-button-normal",e.style.display="none",n.style.display="none",o.style.display="none",i.style.display="none",a.style.display="none",window.currentEditMode=null,window.grid.enableMove(!1),window.grid.enableResize(!1),u(!1),document.querySelectorAll(".portal-tab").forEach(t=>{const e=t.querySelector(".portal-tab-actions");e&&(e.style.display="none")})}async function w(t){try{window.activeTabId&&S();const t={tabs:window.tabs||[],activeTabId:window.activeTabId,updated:(new Date).toISOString()};await a(t),Swal.fire({icon:"success",title:"保存完了",text:"レイアウトが保存されました。",timer:1500,timerProgressBar:!0,showConfirmButton:!1})}catch(t){console.error("保存エラー:",t),Swal.fire({icon:"error",title:"保存エラー",text:"レイアウトの保存に失敗しました。"})}}async function m(t=window.grid,e="auto"){try{const t=await d(e);if(t&&t.tabs)return window.tabs=t.tabs.map(t=>({id:t.id,name:t.name,backgroundColor:t.backgroundColor||"#555555",textColor:t.textColor||"#ffffff",layouts:t.layouts||[],widgets:t.widgets||{}})),window.tabs.length>0&&(window.activeTabId=window.tabs[0].id),f(),window.activeTabId&&P(window.activeTabId),void console.log("レイアウトデータを正常に読み込みました");g()}catch(t){console.error("レイアウト読み込みエラー:",t),g()}}function g(){const t={id:"tab_"+Date.now(),name:"メインタブ",backgroundColor:"#555555",textColor:"#ffffff",layouts:[],widgets:{}};window.tabs=[t],window.activeTabId=t.id,f()}function f(){const t=document.getElementById("tabs-list");t.innerHTML="",window.tabs&&window.tabs.length>0&&window.tabs.forEach(e=>{const n=y(e);t.appendChild(n)})}function y(t){const e=document.createElement("div");e.className="portal-tab dynamic-colors",e.setAttribute("data-tab-id",t.id),e.style.setProperty("--tab-bg-color",t.backgroundColor),e.style.setProperty("--tab-text-color",t.textColor),t.id===window.activeTabId&&e.classList.add("active"),e.innerHTML=`\n        <span class="portal-tab-label" title="${t.name}">${t.name}</span>\n        <div class="portal-tab-actions">\n          <input type="color" class="portal-tab-color-btn" value="${t.backgroundColor}" title="背景色を変更">\n          <input type="color" class="portal-tab-color-btn text-color" value="${t.textColor}" title="文字色を変更">\n          <button class="portal-tab-delete" title="タブを削除">✕</button>\n        </div>\n      `,e.addEventListener("click",e=>{e.target.matches(".portal-tab-color-btn, .portal-tab-delete")||T(t.id)});const n=e.querySelector(".portal-tab-label");n.addEventListener("dblclick",()=>{window.editMode&&b(t.id)});const o=e.querySelector(".portal-tab-color-btn:first-of-type");o.addEventListener("change",e=>{window.editMode&&h(t.id,"backgroundColor",e.target.value)});const i=e.querySelector(".portal-tab-color-btn:last-of-type");i.addEventListener("change",e=>{window.editMode&&h(t.id,"textColor",e.target.value)});const a=e.querySelector(".portal-tab-delete");a.addEventListener("click",e=>{e.stopPropagation(),window.editMode&&v(t.id)});const d=e.querySelector(".portal-tab-actions");return d&&(d.style.display=window.editMode?"flex":"none"),e}async function b(t){const e=window.tabs.find(e=>e.id===t);if(!e)return;const{value:n}=await Swal.fire({title:"タブ名を編集",input:"text",inputValue:e.name,inputPlaceholder:"タブ名を入力...",showCancelButton:!0,confirmButtonText:"保存",cancelButtonText:"キャンセル",inputValidator:t=>{if(!t||""===t.trim())return"タブ名を入力してください！"}});n&&(e.name=n.trim(),f())}function h(t,e,n){const o=window.tabs.find(e=>e.id===t);if(!o)return;o[e]=n;const i=document.querySelector(`.portal-tab[data-tab-id="${t}"]`);i&&("backgroundColor"===e?i.style.setProperty("--tab-bg-color",n):"textColor"===e&&i.style.setProperty("--tab-text-color",n))}async function v(t){if(window.tabs.length<=1)return void Swal.fire({icon:"warning",title:"削除できません",text:"最低1つのタブが必要です。"});const e=window.tabs.find(e=>e.id===t);if(!e)return;const n=await Swal.fire({title:`「${e.name}」を削除しますか？`,text:"このタブとそのコンテンツは完全に削除され、元に戻すことはできません。",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"はい、削除する",cancelButtonText:"キャンセル"});n.isConfirmed&&(window.tabs=window.tabs.filter(e=>e.id!==t),window.activeTabId===t&&(window.activeTabId=window.tabs[0].id,P(window.activeTabId)),f(),Swal.fire({icon:"success",title:"削除完了",text:"タブが削除されました。",timer:1500,timerProgressBar:!0,showConfirmButton:!1}))}async function x(){const{value:t}=await Swal.fire({title:"新しいタブを追加",input:"text",inputPlaceholder:"タブ名を入力...",inputValue:`タブ${window.tabs.length+1}`,showCancelButton:!0,confirmButtonText:"追加",cancelButtonText:"キャンセル",inputValidator:t=>{if(!t||""===t.trim())return"タブ名を入力してください！"}});if(t){const e={id:"tab_"+Date.now(),name:t.trim(),backgroundColor:"#555555",textColor:"#ffffff",layouts:[],widgets:{}};window.tabs.push(e),f(),T(e.id),Swal.fire({icon:"success",title:"タブ追加完了",text:`「${e.name}」が追加されました。`,timer:1500,timerProgressBar:!0,showConfirmButton:!1})}}async function k(t){const{value:e}=await Swal.fire({title:"ウィジェットを追加",input:"select",inputOptions:{"app-display":"アプリ表示（ビュー・グラフ）","rich-text":"リッチテキスト","app-shortcuts":"アプリショートカット",iframe:"外部サイト(iframe)"},inputPlaceholder:"ウィジェット種類を選択",showCancelButton:!0,confirmButtonText:"次へ",cancelButtonText:"キャンセル"});if(e){const{value:n}=await Swal.fire({title:"ヘッダーの表示",input:"select",inputOptions:{true:"ヘッダーあり（タイトル表示）",false:"ヘッダーなし（コンテンツのみ）"},inputValue:"true",showCancelButton:!0,confirmButtonText:"次へ",cancelButtonText:"キャンセル"});if(void 0!==n){let o=null,i=null;if("true"===n){const{value:t}=await Swal.fire({title:"ヘッダー設定",html:`\n                <div style="text-align: left; margin-bottom: 15px;">\n                  <label for="widget-title" style="display: block; margin-bottom: 5px; font-weight: bold;">タイトル:</label>\n                  <input id="widget-title" type="text" class="swal2-input" placeholder="ウィジェットのタイトルを入力" style="margin: 0;">\n                </div>\n                ${H("#4caf79")}\n              `,showCancelButton:!0,confirmButtonText:"追加",cancelButtonText:"キャンセル",didOpen:()=>{const t=document.getElementById("copy-hex");t&&(t.onclick=(()=>{const e=document.getElementById("hex-code").textContent;window.copyToClipboard(e,t)})),window.updateColorPreview()},preConfirm:()=>{const t=document.getElementById("widget-title").value,e=document.getElementById("widget-color").value;return t.trim()?(D(e),{title:t.trim(),color:e}):(Swal.showValidationMessage("タイトルを入力してください"),!1)}});if(!t)return;o=t.title,i=t.color}C(t,e,"true"===n,o,i)}}}function C(t,e,n=!0,o=null,i=null){const a="widget_"+Date.now();let d="";switch(e){case"app-display":d=I(a,n,o,i);break;case"rich-text":d=B(a,n,o,i);break;case"app-shortcuts":d=$(a,n,o,i);break;case"iframe":d=E(a,n,o,i);break;default:return void console.error("Unknown widget type:",e)}t.addWidget(d,{x:0,y:0,w:6,h:n?4:3,id:a}),console.log("Widget added:",e,a)}function I(t,e=!0,n=null,o=null){const i=e?"":"no-header",a=n||"アプリ表示",d=o||"#4caf79";return`\n        <div class="portal-widget ${i}" data-type="app-display" data-id="${t}" data-has-header="${e}" data-custom-title="${a}" data-custom-color="${o||""}" data-font-size="standard" data-text-align="left" data-text-color="white">\n          <div class="widget-header" style="background: ${d} !important;">\n            <span class="widget-title">${a}</span>\n            <button class="widget-edit-header" onclick="editWidgetHeader('${t}')">ヘッダー編集</button>\n          </div>\n          <div class="widget-content" id="content_${t}">\n            <button class="widget-edit-btn" onclick="editAppDisplayWidget('${t}')">設定</button>\n            <button class="widget-delete-btn" onclick="deleteWidget('${t}')"><span class="deleteText">✕</span></button>\n            <p>アプリとビュー/グラフを選択してください</p>\n          </div>\n        </div>\n      `}function B(t,e=!0,n=null,o=null){const i=e?"":"no-header",a=n||"リッチテキスト",d=o||"#4caf79";return`\n        <div class="portal-widget ${i}" data-type="rich-text" data-id="${t}" data-has-header="${e}" data-custom-title="${a}" data-custom-color="${o||""}" data-font-size="standard" data-text-align="left" data-text-color="white">\n          <div class="widget-header" style="background: ${d} !important;">\n            <span class="widget-title">${a}</span>\n            <button class="widget-edit-header" onclick="editWidgetHeader('${t}')">ヘッダー編集</button>\n          </div>\n          <div class="widget-content" id="content_${t}">\n            <button class="widget-edit-btn" onclick="toggleRichTextEdit('${t}')">編集</button>\n            <button class="widget-delete-btn" onclick="deleteWidget('${t}')"><span class="deleteText">✕</span></button>\n            <div class="richtext-container" id="richtext-container_${t}">\n              <div id="richtext_${t}" class="richtext-content"></div>\n            </div>\n          </div>\n        </div>\n      `}function $(t,e=!0,n=null,o=null){const i=e?"":"no-header",a=n||"アプリショートカット",d=o||"#4caf79";return`\n        <div class="portal-widget ${i}" data-type="app-shortcuts" data-id="${t}" data-has-header="${e}" data-custom-title="${a}" data-custom-color="${o||""}" data-font-size="standard" data-text-align="left" data-text-color="white">\n          <div class="widget-header" style="background: ${d} !important;">\n            <span class="widget-title">${a}</span>\n            <button class="widget-edit-header" onclick="editWidgetHeader('${t}')">ヘッダー編集</button>\n          </div>\n          <div class="widget-content" id="content_${t}">\n            <button class="widget-edit-btn" onclick="editAppShortcutsWidget('${t}')">設定</button>\n            <button class="widget-delete-btn" onclick="deleteWidget('${t}')"><span class="deleteText">✕</span></button>\n            <p>ショートカットを設定してください</p>\n          </div>\n        </div>\n      `}function E(t,e=!0,n=null,o=null){const i=e?"":"no-header",a=n||"外部サイト",d=o||"#4caf79";return`\n        <div class="portal-widget ${i}" data-type="iframe" data-id="${t}" data-has-header="${e}" data-custom-title="${a}" data-custom-color="${o||""}" data-font-size="standard" data-text-align="left" data-text-color="white">\n          <div class="widget-header" style="background: ${d} !important;">\n            <span class="widget-title">${a}</span>\n            <button class="widget-edit-header" onclick="editWidgetHeader('${t}')">ヘッダー編集</button>\n          </div>\n          <div class="widget-content" id="content_${t}">\n            <button class="widget-edit-btn" onclick="editIframeWidget('${t}')">設定</button>\n            <button class="widget-delete-btn" onclick="deleteWidget('${t}')"><span class="deleteText">✕</span></button>\n            <p>URLを設定してください</p>\n          </div>\n        </div>\n      `}function T(t){window.activeTabId&&window.grid&&window.activeTabId!==t&&S(),window.activeTabId=t,document.querySelectorAll(".portal-tab").forEach(t=>{t.classList.remove("active")});const e=document.querySelector(`.portal-tab[data-tab-id="${t}"]`);e&&e.classList.add("active"),P(t)}function S(){const t=window.tabs.find(t=>t.id===window.activeTabId);if(!t)return;const e=window.grid.save();t.layouts=e,console.log("現在のタブレイアウトを保存しました:",window.activeTabId)}function P(t){const e=window.tabs.find(e=>e.id===t);e&&window.grid&&(window.grid.removeAll(),e.layouts&&Array.isArray(e.layouts)&&e.layouts.length>0&&window.grid.load(e.layouts))}async function M(){try{const t=e(),n=await i(t);if(!n)return void console.log("設定用アプリが見つかりません。ポータルカスタマイズは無効です。");window.DYNAMIC_CONFIG_APP_ID=n,window.CURRENT_SPACE_ID=t,await Promise.all([U("https://cdn.jsdelivr.net/npm/gridstack@10.1.0/dist/gridstack-all.js"),U("https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"),U("https://cdn.jsdelivr.net/npm/sweetalert2@11"),U("https://unpkg.com/quill@1.3.6/dist/quill.js"),U("https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js")]),F("https://cdn.jsdelivr.net/npm/gridstack@10.1.0/dist/gridstack.min.css"),F("https://unpkg.com/quill@1.3.6/dist/quill.snow.css"),F("https://cdn.jsdelivr.net/gh/nohohonki/portal-customization-plugin@main/portal-live-editor.min.css"),setTimeout(()=>{L()},500)}catch(t){console.error("ライブラリの読み込みに失敗しました:",t)}}function L(){const t=kintone.getLoginUser(),e=!G.ADMIN_ONLY||t.isAdmin,n=document.querySelector(".kintone-portal-content-space");if(!n)return void console.log("ポータル画面が見つかりません");const o=document.createElement("div");o.innerHTML=`\n        <div id="portal-customizer">\n          <div id="portal-toolbar">\n            <div id="tabs-container">\n              <div id="tabs-list">\n                <!-- タブがここに動的に追加されます -->\n              </div>\n              <button id="addTab" class="kintoneplugin-button-normal">\n                + タブ追加\n              </button>\n            </div>\n            <div class="editButtonWrap">\n              <button id="editToggle" class="kintoneplugin-button-normal" style="display: ${e?"inline-block":"none"};">\n                編集モードに切替\n              </button>\n              <button id="editCancel" class="kintoneplugin-button-dialog-cancel">\n                キャンセル\n              </button>\n              <button id="addWidget" class="kintoneplugin-button-normal">\n                ウィジェット追加\n              </button>\n              <button id="resetLayout" class="kintoneplugin-button-dialog-cancel">\n                現在のタブをリセット\n              </button>\n              <button id="deleteMyPortal" class="kintoneplugin-button-dialog-cancel">\n                マイポータルを削除する\n              </button>\n            </div>\n          </div>\n          <div class="grid-stack" id="portal-grid"></div>\n        </div>\n      `,n.insertBefore(o,n.firstChild),l(),m(),console.log("ポータルカスタマイザーが初期化されました（完全版）")}async function q(){const t="personal"===window.currentEditMode?"personal":"shared",e="personal"===t?"個人ポータル":"共有ポータル",n=await Swal.fire({title:`${e}を削除しますか？`,text:`${e}のレイアウトとウィジェットが完全に削除され、元に戻すことはできません。`,icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"はい、削除する",cancelButtonText:"キャンセル"});if(n.isConfirmed)try{const n=window.DYNAMIC_CONFIG_APP_ID,i="personal"===t?kintone.getLoginUser().id:0,a=`ポータルユーザーID = ${i}`,d=await kintone.api(o("/records"),"GET",{app:n,query:a});if(d.records.length>0){const t=d.records[0].レコード番号.value;await kintone.api(o("/record"),"DELETE",{app:n,id:t})}window.grid.removeAll(!1),g(),window.editMode=!1,p(),Swal.fire({icon:"success",title:"削除完了",text:`${e}が削除されました。`,timer:2e3,timerProgressBar:!0,showConfirmButton:!1})}catch(t){console.error("削除エラー:",t),Swal.fire({icon:"error",title:"削除エラー",text:`${e}の削除に失敗しました。`})}}async function _(t){const e=document.querySelector(`[gs-id="${t}"]`);if(!e)return;const n=e.querySelector(".portal-widget"),o=n.querySelector(".widget-title"),i=n.querySelector(".widget-header"),a=o.textContent,d=i.style.getPropertyValue("--header-color")||"#4caf79",{value:l}=await Swal.fire({title:"ヘッダー編集",html:`\n          <div class="swal2-form-group">\n            <label for="edit-widget-title" class="swal2-form-label">タイトル:</label>\n            <input type="text" id="edit-widget-title" class="swal2-input swal2-form-input" value="${a}">\n          </div>\n          <div class="swal2-form-group">\n            <label for="edit-widget-color" class="swal2-form-label">ヘッダー色:</label>\n            <input type="color" id="edit-widget-color" class="swal2-color-input" value="${d}">\n          </div>\n        `,showCancelButton:!0,confirmButtonText:"保存",cancelButtonText:"キャンセル",preConfirm:()=>{const t=document.getElementById("edit-widget-title").value,e=document.getElementById("edit-widget-color").value;return t.trim()?{title:t.trim(),color:e}:(Swal.showValidationMessage("タイトルを入力してください"),!1)}});l&&(o.textContent=l.title,i.style.setProperty("--header-color",l.color),i.style.setProperty("--header-color-dark",l.color+"dd"),i.classList.add("dynamic-colors"))}function A(){const t=localStorage.getItem("widget_color_history");return t?JSON.parse(t):[]}function D(t){let e=A();return e=e.filter(e=>e!==t),e.unshift(t),e.length>5&&(e=e.slice(0,5)),localStorage.setItem("widget_color_history",JSON.stringify(e)),e}function N(t){const e=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(t);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:null}function W(t){return t?(t=t.replace("#",""),3===t.length&&(t=t.split("").map(t=>t+t).join("")),6===t.length&&/^[a-f0-9]{6}$/i.test(t)?"#"+t.toLowerCase():null):null}function H(t,e){const n=A(),o=N(t),i=o?o.r+", "+o.g+", "+o.b:"76, 175, 121";return`\n        <div style="text-align: left;">\n          <label for="widget-color" style="display: block; margin-bottom: 5px; font-weight: bold;">背景色:</label>\n          <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 10px;">\n            <input id="widget-color" type="color" value="${t}"\n                   style="width: 60px; height: 40px; border: none; border-radius: 4px; cursor: pointer;"\n                   onchange="updateColorPreview()">\n            <div id="color-preview" style="flex: 1; padding: 8px; background: white; border: 1px solid #ddd; border-radius: 4px; font-family: monospace; font-size: 12px;">\n              <div id="hex-code">${t.toUpperCase()}</div>\n              <div id="rgb-code">RGB(${i})</div>\n            </div>\n            <button type="button" id="copy-hex" style="padding: 6px 10px; border: 1px solid #ddd; border-radius: 4px; background: white; cursor: pointer; font-size: 11px;">\n              HTMLコピー\n            </button>\n          </div>\n          <div style="margin-bottom: 10px;">\n            <label for="hex-input" style="display: block; margin-bottom: 5px; font-weight: bold; font-size: 12px;">HTMLカラーコード入力:</label>\n            <div style="display: flex; align-items: center; gap: 8px;">\n              <input id="hex-input" type="text" value="${t}" placeholder="#4CAF79 または 4CAF79"\n                     style="flex: 1; padding: 8px; border: 1px solid #ddd; border-radius: 4px; font-family: monospace; font-size: 12px;"\n                     oninput="validateAndApplyHexInput()"\n                     onpaste="setTimeout(validateAndApplyHexInput, 10)">\n              <button type="button" id="apply-hex" onclick="applyHexInput()"\n                      style="padding: 8px 12px; border: 1px solid #ddd; border-radius: 4px; background: #4caf50; color: white; cursor: pointer; font-size: 11px;">\n                適用\n              </button>\n            </div>\n            <div id="hex-input-error" style="color: #d32f2f; font-size: 11px; margin-top: 4px; display: none;"></div>\n          </div>\n          ${n.length>0?`\n            <div style="margin-bottom: 10px;">\n              <label style="display: block; margin-bottom: 5px; font-weight: bold; font-size: 12px;">最近使用した色:</label>\n              <div style="display: flex; gap: 5px; flex-wrap: wrap;">\n                ${n.map(t=>`\n                  <div class="color-history-item"\n                       data-color="${t}"\n                       style="width: 24px; height: 24px; background: ${t}; border: 2px solid #ddd; border-radius: 4px; cursor: pointer; transition: all 0.2s;"\n                       onclick="selectHistoryColor('${t}')"\n                       title="${t}">\n                  </div>\n                `).join("")}\n              </div>\n            </div>\n          `:""}\n        </div>\n      `}async function z(){try{const t=window.CURRENT_SPACE_ID,e=t?kintone.api.url(`/k/guest/${t}/v1/apps`,!0):kintone.api.url("/k/v1/apps",!0),n=await kintone.api(e,"GET",{});return n.apps.map(t=>({appId:t.appId,name:t.name,spaceId:t.spaceId,spaceName:t.spaceName}))}catch(t){return console.error("アプリ一覧取得エラー:",t),[]}}async function R(t,e){Swal.fire({icon:"info",title:"アプリ表示設定",text:"アプリが選択されました。ビュー/グラフ選択機能は今後実装予定です。",timer:2e3,timerProgressBar:!0,showConfirmButton:!1})}function O(t){const e=document.getElementById(`richtext-container_${t}`),n=document.getElementById(`richtext_${t}`),o=document.querySelector(`[data-id="${t}"] .widget-edit-btn`);if(!e||!n||!o)return;const i=document.getElementById(`editor_${t}`);i&&i.remove();const a=e.querySelectorAll(".ql-toolbar");a.forEach(t=>t.remove());const d=n.innerHTML;e.classList.add("editing"),o.textContent="保存",n.style.display="none";const l=document.createElement("div");l.id=`editor_${t}`,e.appendChild(l),window.quillInstances||(window.quillInstances={});const r=new Quill(`#editor_${t}`,{theme:"snow",modules:{toolbar:[[{header:[1,2,3,!1]}],["bold","italic","underline","strike"],[{color:[]},{background:[]}],[{align:[]}],[{list:"ordered"},{list:"bullet"}],["blockquote","code-block"],["link","image"],["clean"]]}});r.root.innerHTML=d||"<p>ここにテキストを入力...</p>",window.quillInstances[t]=r,setTimeout(()=>{r&&r.focus&&r.focus()},100)}function j(t){const e=document.getElementById(`richtext-container_${t}`),n=document.getElementById(`richtext_${t}`),o=document.querySelector(`[data-id="${t}"] .widget-edit-btn`),i=document.getElementById(`editor_${t}`);if(!e||!n||!o)return;if(window.quillInstances&&window.quillInstances[t]){const e=window.quillInstances[t],o=e.root.innerHTML;n.innerHTML=o,delete window.quillInstances[t]}i&&i.remove();const a=e.querySelectorAll(".ql-toolbar");a.forEach(t=>t.remove()),e.classList.remove("editing"),o.textContent="編集",n.style.display="block"}const G=t||{ADMIN_ONLY:!1},U=t=>new Promise((e,n)=>{const o=document.createElement("script");o.src=t,o.onload=e,o.onerror=n,document.head.appendChild(o)}),F=t=>{const e=document.createElement("link");e.rel="stylesheet",e.href=t,document.head.appendChild(e)};window.generateGridCSS=function(t){const e=100/t,n=`\n        .grid-stack.gs-${t} > .grid-stack-item {\n          width: ${e}%;\n        }\n        `+Array.from({length:t-1},(n,o)=>{const i=o+1;return`\n          .grid-stack.gs-${t} > .grid-stack-item[gs-x='${i}'] { left: ${e*i}%; }\n          .grid-stack.gs-${t} > .grid-stack-item[gs-w='${i+1}'] { width: ${e*(i+1)}%; }\n          `}).join(""),o=document.createElement("style");o.textContent=n,document.head.appendChild(o)},window.deleteWidget=function(t){window.editMode&&Swal.fire({title:"ウィジェットを削除しますか？",text:"この操作は取り消せません。",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"削除",cancelButtonText:"キャンセル"}).then(e=>{if(e.isConfirmed){const e=document.querySelector(`[gs-id="${t}"]`);e&&window.grid.removeWidget(e),Swal.fire({title:"削除完了",text:"ウィジェットが削除されました。",icon:"success",timer:1500,showConfirmButton:!1})}})},window.editWidgetHeader=function(t){window.editMode&&_(t)},window.editAppDisplayWidget=async function(t){if(!window.editMode)return;const e=await z(),n={};e.forEach(t=>{const e=t.spaceId?` [スペース: ${t.spaceName||t.spaceId}]`:"";n[t.appId]=`${t.name}${e}`});const{value:o}=await Swal.fire({title:"アプリを選択",input:"select",inputOptions:n,inputPlaceholder:"アプリを選択してください",showCancelButton:!0,confirmButtonText:"次へ",cancelButtonText:"キャンセル"});o&&await R(t,o)},window.toggleRichTextEdit=function(t){if(!window.editMode)return;const e=document.getElementById(`richtext-container_${t}`),n=document.getElementById(`richtext_${t}`),o=document.querySelector(`[data-id="${t}"] .widget-edit-btn`);if(!e||!n||!o)return;const i=e.classList.contains("editing");i?j(t):O(t)},window.editAppShortcutsWidget=async function(t){if(!window.editMode)return;const e=await z(),n=[];let o=!0;for(;o&&n.length<20;){const t=e.filter(t=>!n.find(e=>e.appId===t.appId));if(0===t.length)break;const i={};t.forEach(t=>{const e=t.spaceId?` [スペース: ${t.spaceName||t.spaceId}]`:"";i[t.appId]=`${t.name}${e}`});const{value:a}=await Swal.fire({title:`アプリを選択 (${n.length}/20)`,input:"select",inputOptions:i,inputPlaceholder:"アプリを選択してください",showCancelButton:!0,confirmButtonText:"追加",cancelButtonText:n.length>0?"完了":"キャンセル"});if(a){const t=e.find(t=>t.appId===a);if(n.push(t),n.length>=20)o=!1;else{const{value:t}=await Swal.fire({title:"アプリを追加しますか？",text:`現在${n.length}個のアプリが選択されています。`,icon:"question",showCancelButton:!0,confirmButtonText:"さらに追加",cancelButtonText:"完了"});o=t}}else o=!1}if(n.length>0){const e=document.getElementById(`shortcuts-${t}`);e.innerHTML=n.map(t=>{const e=t.spaceId?`/k/guest/${t.spaceId}`:"/k",n=`${e}/#/app/${t.appId}`;return`\n            <a href="${n}" class="app-shortcut-btn" target="_blank">\n              <span>📱</span>\n              <span>${t.name}</span>\n            </a>\n          `}).join("")}},window.editIframeWidget=async function(t){if(!window.editMode)return;const{value:e}=await Swal.fire({title:"iFrame URLを設定",input:"url",inputPlaceholder:"https://example.com",showCancelButton:!0,confirmButtonText:"設定",cancelButtonText:"キャンセル",inputValidator:t=>t?t.startsWith("http://")||t.startsWith("https://")?void 0:"有効なURLを入力してください（http://またはhttps://で始まる）":"URLを入力してください！"});if(e){const n=document.querySelector(`[gs-id="${t}"]`),o=n.querySelector(".iframe-container");o.innerHTML=`<iframe src="${e}" class="iframe-widget-frame"></iframe>`}},window.updateColorPreview=function(){const t=document.getElementById("widget-color"),e=document.getElementById("hex-code"),n=document.getElementById("rgb-code"),o=document.getElementById("hex-input");if(t&&e&&n){const i=t.value,a=N(i);e.textContent=i.toUpperCase(),n.textContent=a?`RGB(${a.r}, ${a.g}, ${a.b})`:"Invalid Color",o&&o.value!==i&&(o.value=i)}},window.selectHistoryColor=function(t){const e=document.getElementById("widget-color");e&&(e.value=t,window.updateColorPreview())},window.copyToClipboard=function(t,e){navigator.clipboard.writeText(t).then(()=>{const t=e.textContent;e.textContent="コピー済み!",e.style.background="#4caf50",e.style.color="white",setTimeout(()=>{e.textContent=t,e.style.background="white",e.style.color="black"},1e3)}).catch(()=>{const n=document.createElement("textarea");n.value=t,document.body.appendChild(n),n.select(),document.execCommand("copy"),document.body.removeChild(n);const o=e.textContent;e.textContent="コピー済み!",e.style.background="#4caf50",e.style.color="white",setTimeout(()=>{e.textContent=o,e.style.background="white",e.style.color="black"},1e3)})},window.validateAndApplyHexInput=function(){
const t=document.getElementById("hex-input"),e=document.getElementById("hex-input-error"),n=document.getElementById("apply-hex");if(!t||!e||!n)return;const o=t.value.trim();if(!o)return e.style.display="none",void(n.disabled=!1);const i=W(o);i?(e.style.display="none",n.disabled=!1,t.style.borderColor="#ddd",applyHexInput()):(e.textContent="無効なカラーコードです（例: #4CAF79, 4CAF79, #fff）",e.style.display="block",n.disabled=!0,t.style.borderColor="#d32f2f")},window.applyHexInput=function(){const t=document.getElementById("hex-input")||document.getElementById("edit-hex-input"),e=document.getElementById("widget-color")||document.getElementById("edit-widget-color");if(!t||!e)return;const n=t.value.trim(),o=W(n);o&&(e.value=o,t.value=o,document.getElementById("widget-color")&&window.updateColorPreview&&window.updateColorPreview(),document.getElementById("edit-widget-color")&&window.updateEditColorPreview&&window.updateEditColorPreview())},M()},"function"==typeof window.initPortalCustomizer||"undefined"!=typeof kintone&&kintone.events.on(["portal.show","space.portal.show"],async()=>{window.initPortalCustomizer()})})();